export const certData: Record<
  string,
  {
    label: string;
    title: string;
    image: string;
    period: string;
    review: string;
  }
> = {
  egig: {
    label: "🏫 2023 EG@IG (인터넷거버넌스 전문가그룹) 1th 수료",
    title: "개발자의 꿈을 갖게 된 계기",
    image: "/cert/egig.jpg",
    period: "2022.03 ~ 2022.11",
    review: `
    비전공자인 저에게 '개발자'라는 꿈이 싹트기 시작한 계기는 바로 EG@IG였습니다.  
    EG@IG(Internet Governance Expert Group)는 디지털 전환이 가속화되는 시대에 발맞춰, 인터넷 거버넌스와 글로벌 기술 흐름에 대한 깊이 있는 이해를 돕는 차세대 교육 프로그램입니다.
    
    당시 저는 단국대학교 정치외교학부에 재학 중이었으며, 컴퓨터와 기술에 대한 관심은 있었지만 개발자라는 진로는 아직 명확하지 않았습니다.  
    하지만 EG@IG를 통해 기술이 사회 구조를 어떻게 변화시키고, 정책에 어떤 영향을 주는지를 실질적으로 느끼게 되면서 제 인생의 방향이 뚜렷해졌습니다.
    
    특히 학교 대표로 프로그램에 참가하여 전국 각지의 대학생들과 함께 협력 논문을 작성하고, 매주 지도교수님과의 토론 세션을 통해 의견을 조율하고 지식을 나누는 과정은 매우 인상적이었습니다.  
    그 과정에서 단순한 기술 습득을 넘어, **팀워크와 커뮤니케이션의 중요성**을 깊이 있게 체감할 수 있었습니다.
    
    이러한 활동을 통해 저는 "기술은 단순한 도구가 아니라 사회를 변화시키는 핵심 힘"이라는 사실을 온몸으로 깨달았으며,  
    단지 이론적인 관심을 넘어서 진정으로 **프로그래밍 기술과 컴퓨터 시스템에 대한 실질적인 학습 필요성**을 절감하게 되었습니다.
    
    EG@IG는 저에게 개발자로서의 출발점이자, 기술과 사회가 어떻게 연결되는지를 몸소 체험할 수 있었던 소중한 전환점이었습니다.
    `,
  },
  ssafy: {
    label: "🏫 2024 삼성 청년 SW 아카데미 12th 1학기 수료",
    title: "개발자의 첫 단추",
    image: "/cert/ssafy.jpg",
    period: "2024.07 ~ 2025.01",
    review: `
    개발을 정식으로 배우기 시작한 첫걸음은 바로 삼성 청년 SW 아카데미(SSAFY)였습니다.  
    비전공자로서 체계적인 개발 학습 경험이 없던 저는, SSAFY를 통해 백엔드와 프론트엔드는 물론, SQL, 컴퓨터 기초이론에 이르기까지 폭넓고 실무에 가까운 풀스택 교육을 경험하였습니다.
    
    이 과정에서 저는 Python을 활용한 알고리즘 문제 해결 능력을 기르며, 자료구조 및 컴퓨터의 기본 개념을 다질 수 있었습니다.  
    또한 Django 프레임워크를 기반으로 백엔드 개발을 실습하였고, 프론트엔드 영역에서는 HTML, CSS, JavaScript, Bootstrap 등 UI 설계의 기초를 익혔습니다.  
    Git과 GitHub을 통한 협업 및 버전 관리도 체득하였으며, 실제 프로젝트를 통해 팀 단위로 서비스를 구축하는 경험을 쌓았습니다.
    
    무엇보다 의미 있었던 점은, 단순한 기술 습득을 넘어 **팀원들과 함께 문제를 해결해 나가는 과정**이었습니다.  
    학우들과의 프로젝트와 알고리즘 스터디, 페어 프로그래밍을 진행하며 **협력, 이해심, 그리고 끈기 있게 문제를 해결하는 힘**을 배워갔습니다.  
    의견이 충돌할 때도 경청하고 조율해 나가는 과정을 통해 개발자로서의 태도를 자연스럽게 체득하였습니다.
    
    이러한 경험 속에서 저는 자연스럽게 프론트엔드 개발의 매력에 빠지게 되었습니다.  
    사용자에게 직접 가치를 전달하고, 눈에 보이는 화면을 통해 문제를 해결하는 UI/UX 영역에 큰 흥미를 느끼게 되었고, 제 진로를 프론트엔드로 명확히 정하게 되는 계기가 되었습니다.
    
    SSAFY는 저에게 단순한 개발 교육 이상의 경험이었습니다.  
    **비전공자였던 저를 개발자로 성장시킬 수 있도록 충분한 기반을 마련해준 터전**이었으며, 협업과 실천을 통해 저의 가능성을 확인할 수 있었던 값진 시간들이었습니다.
    `,
  },
  react: {
    label: "📖 2024 inflearn React 강의 수료",
    title: "프론트엔드의 시작 - React",
    image: "/cert/react.jpg",
    period: "2025.01 ~ 2025.02",
    review: `
    SSAFY 과정에서는 Vue 프레임워크를 중심으로 학습하였으나, 실무에서는 React의 활용도가 훨씬 높다는 점을 깨닫고 별도로 React를 학습하게 되었습니다.  
    프론트엔드 개발자로서 경쟁력을 갖추기 위해, SSAFY에서 미처 다루지 못한 부분을 보완하고자 인프런 강의를 수강하며 React의 기초부터 차근차근 익혀 나갔습니다.
    
    React의 핵심인 컴포넌트 기반 개발 방식은 저에게 매우 직관적으로 다가왔으며, UI를 작은 단위로 나누어 효율적으로 관리하는 개념을 이해할 수 있게 되었습니다.  
    컴포넌트 간의 상태 전달, props와 useState, useEffect 훅의 활용 등 구조화된 방식으로 UI를 설계하는 법을 학습하였습니다.
    
    강의 수강에 그치지 않고, React 공식 문서를 지속적으로 참고하며 실습을 병행하였습니다.  
    작은 단위의 버튼, 카드, 모달 등 재사용 가능한 컴포넌트를 직접 만들고, 상태를 전역으로 관리하는 방법까지 실험하며 기술을 점차 내재화해 나갔습니다.
    
    또한 JSX 문법, 컴포넌트 트리, React의 렌더링 흐름 등을 이해하면서, 보다 효율적이고 유지보수가 용이한 코드를 작성하는 습관도 함께 길러졌습니다.
    
    React는 단순한 프레임워크를 넘어, **프론트엔드 설계 사고방식을 확장시켜 준 기술**이었습니다.  
    이 과정을 통해 저는 진정한 프론트엔드 개발자로 한 걸음 더 나아갈 수 있었습니다.
    `,
  },
  tailwind: {
    label: "📖 2025 inflearn Tailwind-CSS 강의 수료",
    title: "프론트엔드의 시작 - Tailwind CSS",
    image: "/cert/tailwind.jpg",
    period: "2025.01 ~ 2025.02",
    review: `
    기존에는 Bootstrap이나 순수 CSS를 활용하여 스타일링을 하였으나, Tailwind CSS는 저에게 전혀 새로운 방식의 접근이었습니다.  
    처음에는 클래스가 너무 많아 보이고 낯설게 느껴졌지만, 유틸리티 클래스 기반의 구조에 익숙해지자 스타일을 빠르고 일관성 있게 적용할 수 있다는 큰 장점을 체감하게 되었습니다.
    
    Tailwind CSS를 활용하면서 UI 구현 속도는 눈에 띄게 향상되었으며, 마치 코드를 작성하듯 디자인을 조립하는 경험이 매우 인상적이었습니다.  
    기존의 CSS 방식처럼 별도로 스타일 시트를 분리하지 않고, 컴포넌트 단위에서 직접 스타일을 선언할 수 있어 유지보수와 확장성 측면에서도 효율적이라 느꼈습니다.
    
    특히 반응형 유틸리티, 다크모드 대응, hover/focus 상태 처리 등 실무에 필요한 요소들을 클래스 하나로 손쉽게 처리할 수 있다는 점이 매우 유용하였습니다.  
    Tailwind의 설정 파일을 활용한 커스터마이징, 디자인 시스템 확장 등도 추가적으로 학습하며 실제 프로젝트에 적극적으로 활용하고 있습니다.
    
    Tailwind CSS는 저에게 **프론트엔드 개발의 생산성과 미적 감각을 동시에 끌어올려준 핵심 도구**였으며, 지금은 가장 주력으로 사용하는 CSS 프레임워크로 자리잡았습니다.
    `,
  },
  typescript: {
    label: "📖 2025 inflearn TypeScript 강의 수료",
    title: "더 나은 개발 습관, TypeScript",
    image: "/cert/typescript.jpg",
    period: "2025.02 ~ 2025.03",
    review: `
    JavaScript는 유연하고 자유로운 언어이지만, 그만큼 실수도 잦고 예측하기 어려운 경우가 많았습니다.  
    그러한 한계를 보완하고자 TypeScript를 학습하게 되었으며, 이는 제가 더 안정적인 코드를 작성하는 데 큰 도움이 되었습니다.
    
    처음에는 타입 시스템이 낯설고 복잡하게 느껴졌지만, 프로젝트에 직접 TypeScript를 적용해 보면서 그 필요성을 몸소 체감하게 되었습니다.  
    컴파일 단계에서 오류를 사전에 방지할 수 있었고, 코드의 의도를 명확히 표현할 수 있어 협업 시에도 이해도를 높이는 데 효과적이었습니다.
    
    또한 타입 정의를 기반으로 한 **에디터의 자동완성 기능**과 **타입 추론**, **객체 구조에 대한 명시적 표현** 덕분에 개발 경험도 한층 더 향상되었습니다.  
    함수의 매개변수, 반환 타입, API 응답 객체 등에 타입을 지정함으로써 실수를 줄이고 유지보수의 안정성을 높일 수 있었습니다.
    
    TypeScript는 단순한 문법의 확장이 아니라, **더 나은 개발 습관을 만들어주는 도구**라고 느꼈습니다.  
    코드의 신뢰성과 가독성을 높이고, 팀 프로젝트에서도 일관된 개발 문화를 이끌어가는 데 중요한 역할을 해주었습니다.
    
    앞으로도 TypeScript를 중심으로 코드를 작성하며, 더욱 견고하고 확장 가능한 애플리케이션을 만들기 위해 계속 정진하고자 합니다.
    `,
  },
  nextjs: {
    label: "📖 2025 inflearn Next.js 강의 수료",
    title: "프론트엔드의 꽃 - Next.js",
    image: "/cert/nextjs.jpg",
    period: "2025.03 ~ 2025.04",
    review: `
    Next.js는 제가 지금까지 학습해온 프레임워크 중 가장 재미있고 인상 깊은 기술이었습니다.  
    React를 기반으로 하면서도, 파일 기반 라우팅, 서버 사이드 렌더링(SSR)과 클라이언트 사이드 렌더링(CSR)의 유연한 전환, API Routes와 이미지 최적화 등 실무에서 자주 요구되는 기능들을 폭넓게 지원해 주었습니다.
    
    처음에는 App Router의 디렉토리 구조와 병렬 라우트 등의 개념이 다소 낯설게 느껴졌으나, 학습을 이어갈수록 그 설계의 효율성과 확장성에 깊은 인상을 받게 되었습니다.  
    특히 동적 라우팅, layout.tsx를 통한 구조적 설계, 서버 컴포넌트의 도입 등은 제가 기존에 배워왔던 React의 개발 방식에 새로운 관점을 더해주었습니다.
    
    Next.js를 활용하면서 실제 배포까지의 전 과정을 직접 경험해볼 수 있었던 것도 큰 장점이었습니다.  
    Vercel을 통해 손쉽게 프로젝트를 배포하고, 빠른 피드백을 받을 수 있었으며, CDN과 캐싱 처리 등 실무에서 접할 수 있는 배포 기술 전반에 대한 이해도를 높일 수 있었습니다.
    
    Next.js는 단순한 프레임워크가 아닌, **프론트엔드와 백엔드의 경계를 넘나드는 풀스택 개발 도구**라고 느껴졌습니다.  
    지금도 공식 문서를 기반으로 App Router의 최신 기능들을 꾸준히 학습하고 있으며, 앞으로의 프로젝트에서도 적극적으로 활용하고자 합니다.
    
    Next.js를 통해 저는 단순히 기술을 배우는 수준을 넘어서, **서비스 전체의 흐름을 설계하고 관리할 수 있는 개발자로 성장할 수 있다는 자신감**을 얻었습니다.
    `,
  },
  nodejs: {
    label: "📖 2025 CodingApple Node.js 강의 수강",
    title: "프론트의 한계를 넘어서기 위해 - Node.js",
    image: "/cert/node.jpg",
    period: "2025.04 ~ 진행 중",
    review: `
    백엔드까지 이해해야 진짜 프론트엔드다.  
    프론트엔드 개발만을 다루던 저에게는 서버, 데이터베이스, API 처리 등 백엔드 영역은 막연하고 어려운 분야였습니다.  
    그러한 한계를 극복하고자 현재 Node.js 강의를 수강하며 백엔드 전반에 대한 이해를 넓혀가고 있습니다.
    
    CodingApple의 강의를 통해 REST API 설계, Express 프레임워크 기반의 라우팅 처리, 파일 업로드 및 관리, MongoDB를 활용한 데이터베이스 연동 등 실무에서 자주 활용되는 기술들을 단계적으로 익혀가고 있습니다.  
    프론트와 백엔드 간의 데이터 흐름, 요청과 응답 구조, 미들웨어 처리 방식 등을 학습하면서, 서비스의 전체적인 구조를 더욱 명확하게 이해하게 되었습니다.
    
    아직 완전히 마스터한 상태는 아니지만, 직접 백엔드 API를 만들어보고 프론트엔드에서 호출해보는 과정을 반복하면서 점차 **프론트-백엔드 간의 연결 구조**를 체득해가고 있습니다.  
    이를 통해 협업 시 백엔드 개발자와의 의사소통이 한층 수월해졌으며, 코드의 흐름을 더욱 논리적으로 바라볼 수 있게 되었습니다.
    
    Node.js 학습은 아직 진행 중이지만, 확실히 저의 개발적 시야를 넓혀주는 소중한 경험이 되고 있습니다.  
    앞으로도 백엔드에 대한 학습을 이어가며, **프론트엔드와 백엔드를 아우를 수 있는 유연한 개발자**로 성장하고자 합니다.
    `,
  },
  certificate1: {
    label: "🛠️ 2025 정보처리기사 필기 합격 / 실기 준비 중",
    title: "정보처리기사 필기 합격",
    image: "/cert/certificate1.jpg",
    period: "2025.02",
    review: `
    비전공자로서 개발자의 길을 걷기 위해 가장 먼저 준비했던 것은, 탄탄한 이론 기반을 갖추는 것이었습니다.  
    이에 정보처리기사 자격증에 도전하게 되었고, 필기 시험을 합격하며 개발자로서의 첫 자격을 취득하였습니다.
    
    시험을 준비하며 컴퓨터 구조, 운영체제, 네트워크, 데이터베이스, 소프트웨어 공학 등 전반적인 CS 기초 이론을 학습할 수 있었고, 이를 통해 기술의 개념을 보다 체계적으로 이해하게 되었습니다.  
    특히 알고리즘과 자료구조뿐 아니라, 시스템 전반의 흐름과 아키텍처를 보는 시야가 확장되며 프론트엔드 개발에도 긍정적인 영향을 주고 있습니다.
    
    현재는 실기 시험을 준비 중에 있으며, 문제 해결 능력과 실무에 가까운 접근 방식을 함께 다듬고 있습니다.  
    단순한 암기 위주의 학습이 아닌, 이해를 바탕으로 한 사고력 중심의 공부를 통해 **실제 개발에 적용 가능한 기본기**를 쌓아가고자 합니다.
    
    정보처리기사 자격증 준비는 단순한 취득을 넘어서, **기초 CS 지식에 대한 자신감을 높이고, 개발자로서의 기반을 다지는 계기**가 되어주고 있습니다.
    `,
  },
  certificate2: {
    label: "🛠️ 2025 SQLD",
    title: "SQLD 자격증",
    image: "/cert/certificate2.jpg",
    period: "2025.02",
    review: `
    데이터 중심의 웹 애플리케이션을 보다 깊이 있게 설계하고 구현하기 위해, 관계형 데이터베이스에 대한 이론과 실무 지식을 체계적으로 학습하고자 SQLD 자격증에 도전하였습니다.  
    SQL 문법뿐만 아니라 정규화, 트랜잭션 처리, 인덱스 설계, 데이터 모델링 등 데이터베이스의 핵심 개념들을 폭넓게 익힐 수 있는 기회가 되었습니다.
    
    단순히 SELECT 문을 작성하는 수준을 넘어서, 실제 서비스의 데이터 흐름을 고려한 테이블 설계와 쿼리 최적화 방식 등을 고민하게 되었고,  
    이를 통해 데이터 구조를 어떻게 효율적으로 구축하고 운영할 것인가에 대한 감각도 함께 키울 수 있었습니다.
    
    SQLD 자격증 학습은 단순한 자격 취득을 넘어서, 프론트엔드 개발자로서 백엔드와의 연결을 이해하고 협업할 수 있는 기반을 만들어 주었습니다.  
    데이터에 대한 사고력과 구조적 이해가 높아지면서, 복잡한 비즈니스 로직을 구현할 때도 더 안정적인 접근이 가능해졌습니다.
    
    앞으로도 지속적으로 데이터 관련 역량을 강화하며, **프론트엔드와 백엔드를 아우르는 시각으로 완성도 높은 애플리케이션을 만들 수 있는 개발자**로 성장하고자 합니다.
    `,
  },
};

export const certList = Object.entries(certData).map(([id, data]) => ({
  id,
  label: data.label, // 또는 별도 label 항목을 certData에 추가해도 됨
}));
